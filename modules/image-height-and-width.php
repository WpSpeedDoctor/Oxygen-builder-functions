<?php

defined( 'ABSPATH' ) || exit;

/**
 * Description: Adds image height and width to html img element generated by Oxygen. Place CDN domain into attribute field if you're using it.
 * 
 */

	
define ( 'OXI_IMG_CDN', empty($attribute) ? false : $attribute  ); 

if ( ! function_exists( 'remove_non_local_images_oximg' )){
	function remove_non_local_images_oximg( $img_elements_all ) {
		
		foreach ( $img_elements_all as $img_element) {

			if ( has_local_url_oximg($img_element) ) $result[] = $img_element;

		}

		return empty($result) ? false : $result; 
		
	}
}

if ( ! function_exists( 'has_local_url_oximg' )){
	function has_local_url_oximg( $string ) {
	
		$site_url = get_site_url();
		
		if ( is_int( strpos( $string, $site_url ) ) ) return true;

		if (!OXI_IMG_CDN) return false;

		return is_int( strpos( $string, OXI_IMG_CDN ) );
	}
}


if ( ! function_exists( 'get_images_elements_oximg' )){
	function get_images_elements_oximg( $buffer = false ) {
	
		if ( !$buffer ) return false;

		preg_match_all('/<img[\S\s]*?\>/', $buffer, $img_elements);
		
		$img_elements_all = call_user_func_array('array_merge', $img_elements);

		$result = remove_non_local_images_oximg($img_elements_all);

		return $result;
	}
}

if ( ! function_exists( 'get_images_data_oximg' )){
	function get_images_data_oximg( $img_elements ) {
		
		$result = false;

		foreach ($img_elements as $key => $img_element ) {

			if ( is_int(strpos($img_element, 'width=' ) ) ) continue;
			
			preg_match('/src=[\'|"]([\S\s]*?)[\'|"]/', $img_element, $output_array );

			$img_filepath = convert_url_to_path_oximg( $output_array[1] );

			$img_string = getimagesize( $img_filepath)[3];

			if (!empty($img_string) ) $result[] = array( 'html' => $img_element, 'add_string' => $img_string );

		}

	return $result;
	}
}

if ( ! function_exists( 'convert_url_to_path_oximg' )){

	function convert_url_to_path_oximg( $url ) {

			$parsed_url = parse_url( $url );

			if( empty( $parsed_url['path'] ) ) return false;
			
			$file = ABSPATH . ltrim( $parsed_url['path'], '/');
			
			if ( file_exists( $file) ) return $file;
			
			return false;
		}	
}


if ( ! function_exists( 'add_height_with_to_imgs_oximg' )){
	function add_height_with_to_imgs_oximg( $buffer, $img_data_array ) {
	
		foreach ($img_data_array as $key => $value) {

			$element_with_width_height = str_replace( '>', ' '.$value['add_string'].'>', $value['html'] );

			$buffer = str_replace( $value['html'], $element_with_width_height, $buffer );
		}
		
		return $buffer;
	}
}


function far_ob_call_oximg( $buffer ) { 

    $img_elements = get_images_elements_oximg( $buffer );

    if (!$img_elements) return $buffer;

    $img_data_array = get_images_data_oximg( $img_elements );

    if (!$img_data_array) return $buffer;

    $output = add_height_with_to_imgs_oximg( $buffer, $img_data_array );

    return $output;
}

function template_redirect_oximg() {

	if ( isset($_GET['ct_template']) or isset($_GET['ct_builder']) ) return; 

    ob_start();

    ob_start( 'far_ob_call_oximg' );
}
 
add_action( 'template_redirect', 'template_redirect_oximg' );
